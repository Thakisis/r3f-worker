/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 --transform .\MC.glb .\MC.glb -t 
Files: .\MC.glb [99.66KB] > C:\discord\r3f-worker\public\models\MC-transformed.glb [10.92KB] (89%)
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    McLogo: THREE.Mesh
  }
  materials: {
    LogoMaterial: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/MC-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.McLogo.geometry} material={materials.LogoMaterial} />
    </group>
  )
}

useGLTF.preload('/MC-transformed.glb')
